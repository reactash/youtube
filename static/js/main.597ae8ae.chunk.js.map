{"version":3,"sources":["youtube.js","Searchbar.js","VideoDetail.js","VideoItem.js","VideoList.js","App.js","index.js"],"names":["youtube","axios","create","baseURL","params","part","maxresult","key","Statusbar","onFormSubmit","useState","search","setSearch","className","type","placeholder","aria-label","aria-describedby","value","onChange","e","target","console","log","onKeyPress","onClick","id","VideoDetail","video","videoSrc","videoId","style","height","Paper","elevation","frameBorder","width","title","src","snippet","channelTitle","description","VideoItem","onselectedvideo","Grid","xs","display","alignItems","cursor","thumbnails","medium","url","alt","Typography","varient","VideoList","videos","list","map","container","spacing","App","setVideo","selectedvideo","setSelectedVideo","fetchData","query","a","get","maxResults","q","request","data","items","justify","color","item","Searchbar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.597ae8ae.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst youtube= axios.create({\r\n    baseURL:'https://www.googleapis.com/youtube/v3',\r\n    params:{\r\n        part:'snippet',\r\n        maxresult:5,\r\n        key:'AIzaSyDVzfU2czRPtwEvtTBBcE9cmSSVqP3zQ64'\r\n    }\r\n});\r\n\r\nexport default youtube;","import React, { useState } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nconst Statusbar =({onFormSubmit})=>{\r\n\r\n const[search,setSearch]=useState('');\r\n \r\n     \r\n   const changeEvent=(e)=>{\r\n    setSearch(e.target.value);\r\n    console.log(search);\r\n}\r\n\r\nconst clickEvent=(e)=>{\r\n  onFormSubmit(search);\r\n\r\n}\r\n\r\nconst onkeypress=(e)=>{\r\n    if(e.key==='Enter'){\r\n    onFormSubmit(search);\r\n}\r\n\r\n}\r\n\r\n    return(\r\n             \r\n        <> \r\n        <div className='container-fluid nav-bg' >\r\n     <div className='row p-4 '>\r\n     <div className='col-10 mx-auto'>\r\n   \r\n        <div className=\"input-group mb-3\" >\r\n     <input type=\"text\" className=\"form-control\" placeholder=\"Search anything\" \r\n   aria-label=\"Search\" aria-describedby=\"button-addon2\"\r\n    value={search} onChange={changeEvent}\r\n     onKeyPress={onkeypress} />\r\n  <button className=\"btn btn-outline-secondary\"\r\n   type=\"button\" \r\n   onClick={clickEvent}\r\n   id=\"button-addon2\"><SearchIcon/></button>\r\n   </div>\r\n     </div>\r\n     </div>\r\n     </div>\r\n     \r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Statusbar;","import React from 'react'\r\nimport {Paper} from '@material-ui/core';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css'\r\n\r\nconst VideoDetail=({video})=>{\r\n    \r\n    if(!video) return <div>Loading....</div>\r\n\r\n    const videoSrc=`https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return(\r\n          <>\r\n           <div className='video-container' style={{height:'70vh'}} >\r\n          <Paper elevation={6} style={{ height:'65vh' }}>\r\n          <iframe frameBorder='0' height='100%' width='100%' title='Video Player'\r\n           src={videoSrc}/>\r\n             </Paper>\r\n             <Paper elevation={6} className='p-2'>\r\n           <h4>{video.snippet.channelTitle}</h4>\r\n           <p>{video.snippet.description}</p>\r\n           </Paper>\r\n           </div>\r\n        \r\n         \r\n          </>\r\n    );\r\n}\r\n\r\nexport default VideoDetail;","import React from 'react';\r\nimport {Paper, Typography,Grid} from '@material-ui/core'\r\nimport './App.css'\r\n\r\nconst VideoItem=({video,onselectedvideo})=>{\r\n\r\n    return(\r\n        <>\r\n          <Grid xs={12} className='p-2'>\r\n          <Paper onClick={()=>onselectedvideo(video)} \r\n          style={{display:'flex',alignItems:'center',cursor:'pointer'}}    className='vl mb-1'>\r\n              <img src={video.snippet.thumbnails.medium.url} \r\n              style={{ alignItems:'center',width:'100%'}}\r\n              alt='thumbnail' \r\n                \r\n              />\r\n              <Typography varient='subtitle1' className='lt mx-3'><b>{video.snippet.title}</b></Typography>\r\n          </Paper>\r\n          </Grid>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport VideoItem from './VideoItem';\r\nimport {Grid} from '@material-ui/core';\r\nimport './App.css'\r\n\r\nconst VideoList=({videos,onselectedvideo})=>{\r\n   const  list=videos.map((video,id)=>\r\n    <VideoItem onselectedvideo={onselectedvideo}\r\n       key={id}\r\n       video={video}\r\n     />);\r\n       \r\n       return(\r\n        <Grid container spacing={10}>\r\n        {list}\r\n     </Grid>\r\n       );\r\n   \r\n\r\n\r\n};\r\n\r\nexport default VideoList;","import React,{useState } from 'react';\r\nimport youtube from './youtube';\r\nimport Searchbar from './Searchbar';\r\nimport VideoDetail from './VideoDetail';\r\nimport VideoList from './VideoList';\r\nimport { Grid } from '@material-ui/core';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\n\r\nimport './App.css'\r\n\r\n\r\nconst App=()=>{\r\n\r\n   const[video,setVideo]=useState([]);\r\n   const[selectedvideo,setSelectedVideo]=useState(null);\r\n   \r\n  \r\n     const fetchData=async(query)=>{\r\n     const request =await youtube.get('search',{\r\n     params:{\r\n          part :'snippet',\r\n          maxResults:5,\r\n          key:'AIzaSyDVzfU2czRPtwEvtTBBcE9cmSSVqP3zQ64',\r\n          q:query\r\n     },\r\n       }); \r\n     setVideo(request.data.items)\r\n     setSelectedVideo(request.data.items[0])\r\n     console.log(video);\r\n     console.log(selectedvideo);\r\n     \r\n   }\r\n\r\n \r\n    return(<>\r\n\r\n\r\n       <Grid justify='center' container spacing={16} >\r\n\r\n       <Grid>\r\n         <Grid className='align-items-center pt-4'>\r\n         <h3><YouTubeIcon style={{color:'red' }}/>YouTube Clone</h3></Grid>\r\n       </Grid>\r\n             <Grid item xs={11} className='cont row '>\r\n             <Grid container spacing={16}>\r\n\r\n       <Grid className='sb col-lg-12'>      \r\n       <Searchbar onFormSubmit={fetchData}/>\r\n       </Grid>\r\n\r\n       <Grid  className='vd col-lg-7'>             \r\n       <VideoDetail video={selectedvideo}/>\r\n       </Grid>\r\n\r\n       <Grid   className='pt-5 vi col-lg-5'> \r\n       <VideoList videos={video} onselectedvideo={setSelectedVideo}/>\r\n       </Grid>\r\n\r\n\r\n       </Grid>\r\n       </Grid>\r\n       </Grid>\r\n       </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n    );"],"sourceRoot":""}